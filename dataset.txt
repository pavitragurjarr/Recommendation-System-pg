in - import pandas as pd
in - dataset = pd.read_csv(r'C:\Users\Pavitra\Desktop\emdata.csv')
in - dataset.head()
in - dataset.tail()



in - from sklearn.feature_extraction.text import CountVectorizer
in - cv = CountVectorizer(max_features=1000,stop_words='english')

in -vectors = cv.fit_transform(dataset['tags']).toarray()

in -len(cv.get_feature_names_out())

in -cv.get_feature_names_out()

in -import nltk

in - from nltk.stem.porter import PorterStemmer
    ps = PorterStemmer()

in -def stem(text):
    y = []
    
    for i in text.split():
        y.append(ps.stem(i))
        
        return " ".join(y)

in - stem('applecream milk it is plain apple cream shake.')

in - dataset['tags'] = dataset['tags'].apply(stem) 

in - from sklearn.feature_extraction.text import CountVectorizer
in - cv = CountVectorizer(max_features=1000,stop_words='english')

in - vectors = cv.fit_transform(dataset['tags']).toarray()

in - len(cv.get_feature_names_out())

in - cv.get_feature_names_out()

in - from sklearn.metrics.pairwise import cosine_similarity

in - cosine_similarity(vectors)

in - cosine_similarity(vectors).shape

in - similarity = cosine_similarity(vectors)

in - similarity[]

in - similarity[0]

in - def recommend(juice):
        return

in - dataset[dataset['name'] == 'apple c'].index[0] ------------- for checking

in - list(enumerate(similarity[0]))

in - sorted(list(enumerate(similarity[0])),reverse=True)

in - sorted(list(enumerate(similarity[0])),reverse=True,key=lambda x:x[1]) ------------- for checking

in - sorted(list(enumerate(similarity[0])),reverse=True,key=lambda x:x[1])[1:6]------------- for checking

in - def recommend(juice):
       juice_index = dataset[dataset['name'] == juice].index[0]
       distances = similarity[juice_index]
       juice_list = sorted(list(enumerate(distances)),reverse=True,key=lambda x:x[1])[1:6]
    
       for i in juice_list:
        print(i[0])

in - recommend('strawberry c')

in - dataset.iloc[2]

in - def recommend(juice):
      juice_index = dataset[dataset['name'] == juice].index[0]
      distances = similarity[juice_index]
      juice_list = sorted(list(enumerate(distances)),reverse=True,key=lambda x:x[1])[1:6]
    

      for i in juice_list:
        print(dataset['name'][dataset.iloc[i[0]].name])

in - dataset['name'][dataset.iloc[5].name]

in - recommend('apple c')







pickle.dump(dataset.to_dict,open('juice_dict.pkl','wb'))



jupyter notebook